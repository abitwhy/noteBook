	        /* 前景知识：
        轴线的概念
        main axis - 主轴
        cross axis - 垂轴（相对于主轴）
        axis direction - （主轴）轴线方向，
            两个可选方向 ：
                row - 行，即水平方向
                column - 列，即竖直方向
        main start - 主轴起点
        main end - 主轴终点
        相应的，还有垂轴的起终点，不罗嗦了
        flex 容器（flex container）-开启弹性布局的父元素
        flex 项目（flex item）- flex 容器里的子元素 （而非后代元素）
        补充：
        HTML 里，具体是通过分别给 容器和项目设置一些属性，来完成弹性布局的。
        也就是说，弹性布局的属性可分为两类：
            1.容器设置的属性（控制项目宏观排布）
            2.项目设置的属性（告知容器自身的特性）
        */
        * {
            margin: 0;
            padding: 0;
            /* box-sizing: border-box; */
        }
        body {
            width: 80%;
            max-width: 780px;
            min-width: 360px; /* Galaxy S5 屏幕宽度 */
            margin: 0 auto;
            border: 1px solid grey;
        }
        hr {
            margin: 50px 0;
        }
        .origin-div {
            /* width: 400px; */
            height: 400px;
            margin: 0 auto;
            background-color: purple;
     
        }
        .origin-div-item {
            width: 50%;
            height: 50%;
            background-color: orange;
            float: left;
        }
        
        .flex-test {
            margin: 0 auto;
            background-color: purple;
            
            display: flex; 
            /* 在父元素中开启弹性布局（块级元素写法） */
            /* 另外，行内元素也可开启弹性布局 ：inline-flex: */
        }
        .flex-item {
            background-color: orange;
        }
        /* 竖直方向添加内边框的方法（尝试） */
        .flex-test div {
            border-right: 1px solid black;
            border-bottom: 1px solid black;
        }
        .flex-test div:last-of-type {
            border-right: 0;
            border-bottom: 0;
        }
        #flex-test-1 {
            
            flex-flow: row nowrap;
            /* flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。 */

            justify-content: center; 
            /*项目在主轴的对齐方式 */
            /* 其他可选属性值还有：
            flex-start（默认值）：主轴起点对齐
            flex-end：主轴终点对齐
            center： 居中
            space-between：两端对齐，项目之间的间隔都相等。
            space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
            space-ecenly: 均匀排布，项目与项目、项目与主轴起终点，拥有相同的间隔
            */
            
            
        }
        #flex-test-1 .flex-item {
            width: 100px;
            height: 20px;
            /* flex: 1; */ /* 不设置 flex 值（准确的说是 flex-grow 的值），元素就默认不挤占父元素的剩余空间 */
        }
        #flex-test-2 {
            width: 100%;
            height: 320px;
            flex-flow: column wrap;
        }
        /* #flex-test-2 .flex-item {
            flex: 1;
            width: 100%;
            display: flex;
            flex-flow: row wrap;
            align-items: stretch;
        } */
        #flex-test-2 >div {
            flex: 1;
            width: 100%;
            /* height: 40%; */
            display: flex;
            flex-flow: row wrap;
        }
        #flex-test-2 >div >div {
            flex: 1;
            /* width: 40%; */
            height: 100%;
            display: flex;
            flex-flow: column wrap;
        }
        #flex-test-2 >div >div >div {
            flex: 1;
            width: 100%;
            /* height: 40%; */
            display: flex;
            flex-flow: row wrap;
        }
        /* .flex-item .flex-item {
            flex: 1;
            width: 100%;
            height: 40%;
        } */