// ------------------------------ 总结
// 0. 行注释不会被编译，块级注释会被编译
// 1. 尽管变量自身提供了很多有用的地方，但是 sass 基于变量提供的更为强大的工具才是重点。只有当变量与 less/sass 的其他特性一起使用时，才能发挥其全部的潜能。
// ------------------------------ 全局变量
// 1. 颜色
// 1.0 网页配色
$bodyBgColor: black;
// 1.1 主题色
$baseBgColor1: #0065b3;
$baseBgColor2: #ffe9a4;
$baseBgColor3: #4abec5;
$baseBgColor4: #e5a770;
$baseBgColor5: #e9b3c5;
$baseBgColor6: lightcyan;
// 1.2 字体颜色
$baseColor1: rgb(71, 71, 71);
$baseColor2: rgb(104, 104, 104);
$baseColor3: rgb(162, 162, 162);
$baseColor4: rgb(199, 199, 199);
$baseColor5: rgb(228, 228, 228);
// 2. 尺寸
// 2.1 宽高
// 2.2 边距
// 2.2.1 外边距
// 2.2.2 内边距
// 2.3 边框
// 2.4 阴影
// ------------------------------ 样式
// 1. 使用变量
body {
    width: 1200px;
    margin: 0 auto;
    background-color: $bodyBgColor;
}

// 2.选择器嵌套语法，简化后代选择器的书写
header {
    background-color: $baseBgColor4;
}

// 2.1 纯嵌套
main {
    background-color: $baseBgColor3;
    nav {
        background-color: $baseBgColor2;
    }
    aside {
        width: 26%;
        float: right;
        background-color: $baseBgColor5;
    }
    article {
        width: 70%;
        float: left;
        background-color: $baseBgColor5;
        section {
            background-color: $baseBgColor6;
        }
    }
}

footer {
    background-color: $baseBgColor1;
    color: white;
}

// 2.2 配合群组选择器。需注意编译出的 css 代码量
header,
main,
footer,
nav,
aside,
article,
section {
    min-height: 50px;
    margin: 10px 0;
    padding: 5px;
    border-radius: 5px;
    text-align: center;
    overflow: hidden;
}

// 2.3 配合父类选择器&。实质是 sass 内置变量，如同 this 指针=》勘误，并不是 this，仅做了简单的嵌套选择器的字符拼接，导致添加祖先选择器会不那么灵活了 
main {
    a {
        color: blue;
        // 伪类使用 &-父选择器
        &:hover {
            color: red;
        }
        // 而不是选择器嵌套语法默认的后代选择器
         :hover {
            color: green;
        }
        // 使用父类选择器，添加祖辈选择器（失败）
        // section#section2 &:hover{ // 没有这么灵活
        //     color: yellow;
        // }
    }
    // 使用父类选择器，添加祖辈选择器
    section {
        &#section2 a:hover {
            color: yellow;
        }
    }
    &::before {
        content: '★';
    }
}

// 2.4 此外，选择器嵌套语法还支持的 css 选择器有：后代选择器‘ ’、子选择器‘>’、毗邻选择器‘+’、同层选择器‘~’，不再一一列举
// 3. 属性嵌套语法，简化属性的书写
aside {
    border: {
        width: 2px;
        style: solid;
        color: gray;
    }
}

article {
    border: 2px dotted red {
        top: 0;
        bottom: 0;
    }
}

// 4. @import 导入局部样式
@import "zebraTable"; // 引入局部样式不必写其前缀下划线‘_’
#diffrent-between-less-and-sass tbody tr td {
    &:nth-child(2) {
        text-align: center;
    }
}